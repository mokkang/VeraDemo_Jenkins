# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  pull-request:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Veracode Upload And Scan
      # You may pin to the exact commit or the version.
      # uses: veracode/veracode-uploadandscan-action@98e2a2941b985e55bfe469ebcb970b2e686625e4
      uses: veracode/veracode-uploadandscan-action@0.2.6
      with:
        # appname
        appname: VeraDemo-Sandbox-Merge-Master # default is ${{ github.repository }}
        # createprofile
        createprofile: true # default is true
        # filepath
        filepath: ./target/verademo.war
        # version
        version: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
        # vid
        vid: ${{ secrets.VERACODE_API_ID }} 
        # vkey
        vkey: ${{ secrets.VERACODE_API_KEY }}
        # true or false
        createsandbox: true # optional
        # name of the sandbox
        sandboxname: Team A # optional
        # # wait X minutes for the scan to complete
        # scantimeout: # optional
        # # modules to exclude from module selection
        # exclude: # optional
        # # modules to include in module selection
        # include: # optional
        # # business criticality - policy selection
        # criticality: # optional
        # # filename pattern
        # pattern: # optional
        # # replacement
        # replacement: # optional
        # # specify to scan in a sandbox
        # sandboxid: # optional
        # # All top level modules
    # scanallnonfataltoplevelmodules: # optional
    # # platform selected modules
    # selected: # optional
    # # selected modules like from previous scan
    # selectedpreviously: # optional
    # # teams
    # teams: # optional
    # # teams
    # toplevel: # optional
    # # automatically delete the current scan if there are any errors when uploading files or starting the scan
    # deleteincompletescan: # optional
    # # Interval, in seconds, to poll for the status of a running scan. Value range is 30 to 120 (two minutes). Default is 120.
    # scanpollinginterval: # optional
    # # specify version of the Java API Wrapper; default is latest
    # javawrapperversion: # optional
    # # show detailed diagnostic information, which you can use for debugging, in the output.
    # debug: # optional
    # # automatically select all new top-level modules for inclusion in the scan
    # includenewmodules: # optional
          
    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
